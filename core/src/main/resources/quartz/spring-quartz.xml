<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

		<bean id="quartzDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	      <!-- 基本属性 url、user、password -->
	      <property name="url" value="${quartz.jdbc.url}" />
	      <property name="username" value="${quartz.jdbc.username}" />
	      <property name="password" value="${quartz.jdbc.password}" />
	
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="${quartz.druid.initialSize}" />
	      <property name="minIdle" value="${quartz.druid.minIdle}" /> 
	      <property name="maxActive" value="${quartz.druid.maxActive}" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="${quartz.druid.maxWait}" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="${quartz.druid.timeBetweenEvictionRunsMillis}" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="${quartz.druid.minEvictableIdleTimeMillis}" />
	
	      <property name="validationQuery" value="${quartz.druid.validationQuery}" />
	      <property name="testWhileIdle" value="${quartz.druid.testWhileIdle}" />
	      <property name="testOnBorrow" value="${quartz.druid.testOnBorrow}" />
	      <property name="testOnReturn" value="${quartz.druid.testOnReturn}" />
	
	      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="${quartz.druid.poolPreparedStatements}" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="${quartz.druid.maxPoolPreparedStatementPerConnectionSize}" />
	
	      <!-- 配置监控统计拦截的filters -->
	      <!-- <property name="filters" value="stat" /> -->
	      
		  <!-- 密码加密 -->
	      <!-- <property name="filters" value="config" /> 
	      <property name="connectionProperties" value="config.decrypt=true"/> -->
	  </bean>
	  
	  <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource">
			<ref bean="quartzDataSource" />
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContextKey" />
		<property name="configLocation" value="${quartz.configLocation}"/>
	  </bean>
	  
	  <bean name="quartzDAO" class="cn.meteor.module.core.timer.quartz.dao.QuartzDAO">
		<property name="dataSource">
			<ref bean="quartzDataSource" />
		</property>
	  </bean>
	  
</beans>